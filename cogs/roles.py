import discord
from discord.ext import commands
from config import Config
from datetime import datetime, timedelta
import logging
from utils.antispam import AntiFlood
from functools import lru_cache

class Roles(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.antiflood = AntiFlood()
        print("üîπ –ú–æ–¥—É–ª—å —Ä–æ–ª–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
    @lru_cache(maxsize=100)
    def get_role(self, guild, role_id):
        return guild.get_role(role_id)
        
    async def validate_request(self, payload):
        if payload.message_id != Config.POST_ID:
            return False
        if payload.channel_id != Config.ALLOWED_CHANNEL_ID:
            return False
        if await self.antiflood.check_flood(payload.user_id):
            return False
        return True
    
    @commands.Cog.listener()
    async def on_raw_reaction_add(self, payload):
        await self.process_role_change(payload, add_role=True)
    
    @commands.Cog.listener()
    async def on_raw_reaction_remove(self, payload):
        await self.process_role_change(payload, add_role=False)
    
    async def process_role_change(self, payload, add_role=True):
        if not await self.validate_request(payload):
            return
        
        guild = self.bot.get_guild(payload.guild_id)
        if not guild:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        member = guild.get_member(payload.user_id)
        if not member:
            print("‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        if member.bot:
            print("‚ö†Ô∏è –†–µ–∞–∫—Ü–∏—è –æ—Ç –±–æ—Ç–∞ - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º")
            return
            
        emoji = str(payload.emoji)
        if emoji not in Config.ROLES:
            print("‚ùå –≠–º–æ–¥–∑–∏ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ä–æ–ª–∏")
            return
            
        role = self.get_role(guild, Config.ROLES[emoji])
        if not role:
            print(f"‚ùå –†–æ–ª—å –¥–ª—è —ç–º–æ–¥–∑–∏ {emoji} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
            
        try:
            current_roles = {r.id for r in member.roles if r.id not in Config.EXCROLES}
            
            if add_role:
                if len(current_roles) >= Config.MAX_ROLES_PER_USER:
                    msg = f"‚ö†Ô∏è –õ–∏–º–∏—Ç —Ä–æ–ª–µ–π ({Config.MAX_ROLES_PER_USER}) –¥–æ—Å—Ç–∏–≥–Ω—É—Ç"
                    print(msg)
                    await member.send(msg)
                    return
                if role.id not in current_roles:
                    await member.add_roles(role)
                    log_msg = f"‚úÖ –í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å {role.name} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.display_name}"
                    print(log_msg)
                    logging.info(log_msg)
            else:
                if role.id in current_roles:
                    await member.remove_roles(role)
                    log_msg = f"‚ùå –£–¥–∞–ª–µ–Ω–∞ —Ä–æ–ª—å {role.name} —É {member.display_name}"
                    print(log_msg)
                    logging.info(log_msg)
                    
        except discord.Forbidden:
            error_msg = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏"
            print(error_msg)
            logging.error(error_msg)
            await guild.owner.send('‚ö†Ô∏è –ë–æ—Ç—É –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏!')
        except discord.HTTPException as e:
            error_msg = f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π: {e}"
            print(error_msg)
            logging.error(error_msg)

async def setup(bot):
    await bot.add_cog(Roles(bot))