import discord
from discord.ext import commands
from datetime import datetime, timedelta
import asyncio
import logging
from typing import Optional

class VoiceModeration(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.manual_mutes = {}  # {user_id: mute_info}
        self.mute_tasks = {}    # {user_id: task}
        self.locks = {}         # {user_id: lock} –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞–º–∏
        print("üîπ –ú–æ–¥—É–ª—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    async def get_lock(self, user_id: int) -> asyncio.Lock:
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º lock –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_id not in self.locks:
            self.locks[user_id] = asyncio.Lock()
        return self.locks[user_id]

    @commands.command()
    @commands.has_role('–ì–µ–Ω—Å–µ–∫')
    async def mute(self, ctx, member: discord.Member, duration: Optional[int] = None):
        # –ó–∞–º—å—é—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–∫—É—â–µ–º –∫–∞–Ω–∞–ª–µ
        if not member.voice or not member.voice.channel:
            await ctx.send("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ", delete_after=5)
            return

        async with await self.get_lock(member.id):
            success = await self.mute_user_in_channel(member, member.voice.channel, duration, ctx.author)
            if success:
                await ctx.send(f"‚úÖ {member.mention} –∑–∞–º—å—é—á–µ–Ω –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ")
            else:
                await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º—å—é—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞)", delete_after=10)

    @commands.command()
    @commands.has_role('–ì–µ–Ω—Å–µ–∫')
    async def unmute(self, ctx, member: discord.Member):
        # –†–∞–∑–º—å—é—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        async with await self.get_lock(member.id):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–º—å—é—á–µ–Ω —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É
            if member.id not in self.manual_mutes:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –º—É—Ç
                if member.voice and member.voice.mute:
                    try:
                        await member.edit(mute=False)
                        await ctx.send(f"‚úÖ {member.mention} —Ä–∞–∑–º—å—é—á–µ–Ω (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –º—É—Ç)")
                        return
                    except discord.Forbidden:
                        await ctx.send("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–∑–º—É—Ç–∞", delete_after=5)
                        return
                else:
                    await ctx.send(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –Ω–µ –±—ã–ª –∑–∞–º—å—é—á–µ–Ω", delete_after=5)
                    return

            # –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É –∞–≤—Ç–æ—Ä–∞–∑–º—É—Ç–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
            if member.id in self.mute_tasks:
                self.mute_tasks[member.id].cancel()
                try:
                    await self.mute_tasks[member.id]  # –î–æ–∂–∏–¥–∞–µ–º—Å—è –æ—Ç–º–µ–Ω—ã
                except asyncio.CancelledError:
                    pass
                del self.mute_tasks[member.id]

            # –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º—É—Ç–µ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –º—É—Ç–∞
            if member.id in self.manual_mutes:
                del self.manual_mutes[member.id]

            # –ü—ã—Ç–∞–µ–º—Å—è —Å–Ω—è—Ç—å –º—É—Ç
            try:
                await member.edit(mute=False)
                await ctx.send(f"‚úÖ {member.mention} —Ä–∞–∑–º—å—é—á–µ–Ω")
                print(f"üîä –†–∞–∑–º—É—á–µ–Ω: {member.display_name} (–ø–æ–ª–Ω–æ–µ —Å–Ω—è—Ç–∏–µ)")
            except discord.Forbidden:
                await ctx.send("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–∑–º—É—Ç–∞", delete_after=5)
            except Exception as e:
                await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º—É—Ç–µ: {str(e)}", delete_after=10)
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–º—É—Ç–∞ {member.display_name}: {e}")

    async def mute_user_in_channel(self, member: discord.Member, channel: discord.VoiceChannel, 
                                 duration: Optional[int], moderator: Optional[discord.Member]) -> bool:
        # –õ–æ–≥–∏–∫–∞ –º—É—Ç–∞ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –∫–∞–Ω–∞–ª–µ
        # –ï—Å–ª–∏ —É–∂–µ –∑–∞–º—å—é—á–µ–Ω - —Å–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–º—å—é—á–∏–º
        if member.id in self.manual_mutes:
            await self.unmute_user_completely(member)

        self.manual_mutes[member.id] = {
            'channel_id': channel.id,
            'moderator_id': moderator.id if moderator else None,
            'muted_at': datetime.now(),
            'duration': duration
        }

        try:
            if member.voice and member.voice.channel.id == channel.id:
                await member.edit(mute=True)
                print(f"üîá –ú—É—Ç: {member.display_name} –≤ {channel.name}")

            if duration:
                # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –Ω–∞ –∞–≤—Ç–æ—Ä–∞–∑–º—É—Ç
                task = asyncio.create_task(self.auto_unmute_user(member, duration))
                self.mute_tasks[member.id] = task
                task.add_done_callback(lambda t: self._cleanup_task(member.id, t))

            return True
        except discord.Forbidden:
            print(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –º—É—Ç–∞ {member.display_name}")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º—É—Ç–µ {member.display_name}: {e}")
            return False

    async def unmute_user_completely(self, member: discord.Member, 
                                   moderator: Optional[discord.Member] = None) -> bool:
        # –ü–æ–ª–Ω–æ–µ —Å–Ω—è—Ç–∏–µ –º—É—Ç–∞
        if member.id not in self.manual_mutes:
            return False

        try:
            await member.edit(mute=False)
            print(f"üîä –†–∞–∑–º—É—á–µ–Ω: {member.display_name}")
            
            # –£–¥–∞–ª—è–µ–º –∏–∑ —Ä—É—á–Ω—ã—Ö –º—É—Ç–æ–≤
            del self.manual_mutes[member.id]
            
            # –û—á–∏—â–∞–µ–º –∑–∞–¥–∞—á—É, –µ—Å–ª–∏ –µ—Å—Ç—å
            if member.id in self.mute_tasks:
                self.mute_tasks[member.id].cancel()
                del self.mute_tasks[member.id]
                
            return True
        except discord.Forbidden:
            print(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–∑–º—É—Ç–∞ {member.display_name}")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º—É—Ç–µ {member.display_name}: {e}")
            return False
        
    async def auto_unmute_user(self, member: discord.Member, duration: int):
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–Ω—è—Ç–∏–µ –º—É—Ç–∞
        try:
            await asyncio.sleep(duration)
            async with await self.get_lock(member.id):
                if member.id in self.manual_mutes:
                    await self.unmute_user_completely(member)
        except asyncio.CancelledError:
            pass  # –ó–∞–¥–∞—á–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ auto_unmute_user –¥–ª—è {member.display_name}: {e}")

    def _cleanup_task(self, user_id: int, task: asyncio.Task):
        # –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
        if user_id in self.mute_tasks and self.mute_tasks[user_id] == task:
            del self.mute_tasks[user_id]

    @commands.Cog.listener()
    async def on_voice_state_update(self, member: discord.Member, 
                                  before: discord.VoiceState, 
                                  after: discord.VoiceState):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if member.bot:
            return

        async with await self.get_lock(member.id):
            if member.id not in self.manual_mutes:
                return
                
            mute_info = self.manual_mutes[member.id]
            current_time = datetime.now().strftime("%H:%M:%S")
            
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            if before.channel and not after.channel:
                try:
                    was_muted = before.mute
                    await member.edit(mute=False)
                    if was_muted:
                        print(f"{current_time} | üîä {member.display_name} –≤—ã—à–µ–ª –∏–∑ –∫–∞–Ω–∞–ª–∞ (–º—É—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–Ω—è—Ç)")
                except discord.Forbidden:
                    pass
                return
                
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à—ë–ª –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
            if not before.channel and after.channel:
                if after.channel.id == mute_info['channel_id']:
                    try:
                        if not member.voice.mute:
                            await member.edit(mute=True)
                            print(f"{current_time} | üîá {member.display_name} –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –∫–∞–Ω–∞–ª—É (–º—É—Ç –ø—Ä–∏–º–µ–Ω—ë–Ω)")
                    except discord.Forbidden:
                        pass
                return
                
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–º–µ–Ω–∏–ª –∫–∞–Ω–∞–ª
            if before.channel and after.channel:
                # –ü–µ—Ä–µ—à—ë–ª –∏–∑ –∑–∞–º—å—é—á–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ –¥—Ä—É–≥–æ–π
                if before.channel.id == mute_info['channel_id'] and after.channel.id != mute_info['channel_id']:
                    try:
                        if before.mute:
                            await member.edit(mute=False)
                            print(f"{current_time} | üîä {member.display_name} –ø–æ–∫–∏–Ω—É–ª –∑–∞–º—å—é—á–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª")
                    except discord.Forbidden:
                        pass
                
                # –í–µ—Ä–Ω—É–ª—Å—è –≤ –∑–∞–º—å—é—á–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –∏–∑ –¥—Ä—É–≥–æ–≥–æ
                elif after.channel.id == mute_info['channel_id'] and before.channel.id != mute_info['channel_id']:
                    try:
                        if not member.voice.mute:
                            await member.edit(mute=True)
                            print(f"{current_time} | üîá {member.display_name} –≤–µ—Ä–Ω—É–ª—Å—è –≤ –∑–∞–º—å—é—á–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª")
                    except discord.Forbidden:
                        pass

    async def cog_unload(self):
        # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
        for task in self.mute_tasks.values():
            task.cancel()
        await asyncio.gather(*self.mute_tasks.values(), return_exceptions=True)

async def setup(bot):
    await bot.add_cog(VoiceModeration(bot))